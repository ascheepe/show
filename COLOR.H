/*
 * Copyright (c) 2020-2022 Axel Scheepers
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef COLOR_H
#define COLOR_H

#include "system.h"
#include "vector.h"

enum {
    MAX_COLOR_RED,
    MAX_COLOR_GREEN,
    MAX_COLOR_BLUE
};

struct color {
    BYTE red;
    BYTE green;
    BYTE blue;
};

struct vector *palette_to_vector(BYTE *, int);
void median_cut(struct vector *, int, struct vector *);
void write_palette(struct vector *, char *);
BYTE color_to_luma(struct color *);
int find_closest_color(const struct color *,
                       const struct color *,
                       int ncolors);
#endif
